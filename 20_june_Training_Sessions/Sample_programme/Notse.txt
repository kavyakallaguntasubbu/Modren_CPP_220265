Modren CPP
    - All versions of C++ since C++11

CPP is revised / update every 3 years

so version of C++ are : C++ 11 , C++14 , C++17....

5 Weeks

        A -> Essentials of Modren CPP(fundamentals)
        B -> Functional programming in Modren CPP
        C -> Concurrency & C++ 17
        D -> STL DS & Algorithm



FEATURES

    1. In class intialization.
    2 . Enum class
    3 . Enanle/ Disable special member Functions
        aka defaulted/deleted member Functions

        You ,can choose whether to enable or Disable
        6 special member functions for a class you are creating
        a) Default Constructor
        b) Destructor
        C)copy Constructor
        d)copy assignment operator = (overload = operator)
        e) move constructor (new feature in c++ 11)
        f)move assignment operator = (overload = operator for move)

    4 : NULL is replaces with nullptr

    5 . uniform initialization

        we can intialize variables in a function using {}

    NULL alter name for 0

    Employee * ptr = 10 ; //valid code

    // do actions only on Pointer type "null"

    6 . member list intialization

    7 . auto keyword
        detect and infer the type of variable
        BASED ON INITIAL VALUE        

    8 . Constructor delegation
        You cann transfer/shift control of the program from one constructor to another IN SAME CLASS

    9 . Additional Numeric Types with Data Types


    10 . emplace_back
     taking cars as container and place them in vecor directly using emplace_back


    11 . For Each loop


    12 . Using container // so we dont need to vector each time
        using Container = std::vector<Engine *>;


    DATA STRUCTURES :

        Employee 1 : 28
        Employee 2 : 35
        Employee 3 : 29

    Arrangements or structuring of Data

    A) consecutively , one of after the other in memory
        a) No option for adding no data will be providal


       [ 28   |   35   | 29 ] // cant access the other memory
        0x100H   0X104H  0X108H

        b) We can add more data values if required , in future [if we use Vector]


        [ 28   |   35   | 29  .]
        0x100H   0X104H  0X108H

    Employee 4 = 36

        [///////////////////////////////////]

                                            TRANSFER DATA TO A NEW REGION IN MEMORY

        [ 28   |   35   | 29     | 36    // adding the new employee data to the Vector
        0x100H   0X104H  0X108H   0X112H



THINGS NOBODY TELLS YOU ABOUT Data Structures

a) Dta Structures are Arrangements of data , different ways of retrieving or accessing the data

b) Data Structures are theorotical and Philosological . They have to be implemented through code.

3) Implementation of Data Structures on different platforms or in different libraries may differ in behaviour

4) There are "infinite" data Structures in the world

5) data Structures Implementation have to follow rules/syntax of the language

6) 




Data Structures and Algorithms in C++
    - Adam Drozdek



1) All functions must 

-fsanitize = address OR valgrid --leak-check = yes